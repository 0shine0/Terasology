<configuration>

  <!-- Report all changes to this configuration on System.out -->
  <!--statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener" /-->

  <!-- Propagate all log level changes to java.util.logging -->
  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
    <resetJUL>true</resetJUL>
  </contextListener>

  <appender name="SIFT" class="ch.qos.logback.classic.sift.SiftingAppender">
    <!-- in the absence of the class attribute, it is assumed that the
         desired discriminator type is MDCBasedDiscriminator -->
    <discriminator>
      <key>phase</key>
      <defaultValue>init</defaultValue>
    </discriminator>
    <timeout>30 seconds</timeout>
    <sift>
      <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logFileFolder}/Terasology-${phase}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <!-- daily rollover -->
          <fileNamePattern>${logFileFolder}/Terasology-${phase}-%d{yyyy-MM-dd}.log</fileNamePattern>

          <!-- keep 3 days' worth of history -->
          <maxHistory>3</maxHistory>
        </rollingPolicy>
        <encoder>
          <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
      </appender>
    </sift>
  </appender>

  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type PatternLayoutEncoder by default -->
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="LOGSTASH" class="org.terasology.telemetry.logstash.TelemetryLogstashAppender">
    <destination>localhost:9600</destination>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>error</level>
    </filter>

    <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder" >
      <providers>
        <timestamp/>
        <version/>
        <mdc/>
        <message/>
        <logLevel/>
        <loggerName/>
        <threadName/>
        <provider class="org.terasology.telemetry.logstash.SystemContextJsonProvider"/>
        <provider class="org.terasology.telemetry.logstash.ModulesJsonProvider"/>
        <stackTrace>
          <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
            <maxDepthPerThrowable>30</maxDepthPerThrowable>
            <maxLength>2048</maxLength>
            <shortenedClassNameLength>20</shortenedClassNameLength>
            <rootCauseFirst>true</rootCauseFirst>
          </throwableConverter>
        </stackTrace>
      </providers>
    </encoder>
  </appender>

  <root level="${logOverrideLevel:-debug}">
    <appender-ref ref="SIFT" />
    <appender-ref ref="CONSOLE" />
    <appender-ref ref="LOGSTASH"/>
  </root>

  <logger name="org.terasology" level="${logOverrideLevel:-info}" />
  <logger name="org.reflections.Reflections" level="${logOverrideLevel:-error}" />

</configuration>
