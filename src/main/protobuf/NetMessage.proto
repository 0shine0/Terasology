/**
 * @author Immortius <immortius@gmail.com>
 */

import "EntityData.proto";

option java_package = "org.terasology.protobuf";
option java_outer_classname = "NetData";
option optimize_for = SPEED;

message NetMessage {
    enum Type { CLIENT_CONNECT = 1; CONSOLE = 2; SERVER_INFO = 3; CHUNK = 4; INVALIDATE_CHUNK = 5; BLOCK_CHANGED = 6; CREATE_ENTITY = 7; REMOVE_ENTITY = 8;}
    required Type type = 1;
    optional ChunkMessage chunkInfo = 2;
    optional InvalidateChunkMessage invalidateChunk = 3;
    optional BlockChangeMessage blockChange = 4;
    optional ClientConnectMessage clientConnect = 15;
    optional ConsoleMessage console = 16;
    optional ServerInfoMessage serverInfo = 17;
    optional CreateEntityMessage createEntity = 18;
    optional RemoveEntityMessage removeEntity = 19;


    extensions 5000 to max;
}

message ChunkMessage {
    optional Vector3iData pos = 1;
    optional bytes blockData = 2;
    optional bytes liquidData = 3;
    optional bytes sunlightData = 15;
    optional bytes lightData = 16;

    extensions 5000 to max;
}

message InvalidateChunkMessage {
    optional Vector3iData pos = 1;

    extensions 5000 to max;
}

message BlockChangeMessage {
    optional Vector3iData pos = 1;
    optional int32 newBlock = 2;

    extensions 5000 to max;
}

message Vector3iData {
    optional int32 x = 1;
    optional int32 y = 2;
    optional int32 z = 3;
}

message ClientConnectMessage {
    optional string name = 1;
    optional string version = 2;

    extensions 5000 to max;
}

message ServerInfoMessage {
    repeated ModuleInfo module = 1;
    repeated BlockMapping blockMapping = 2;
    optional int64 time = 3;

    optional string version = 15;
    optional string worldName = 16;

    extensions 5000 to max;
}

message ConsoleMessage {
    optional string message = 1;

    extensions 5000 to max;
}

message BlockMapping {
    optional string blockName = 1;
    optional int32 blockId = 2;

    extensions 5000 to max;
}

message ModuleInfo {
    optional string moduleId = 1;

    extensions 5000 to max;
}

message CreateEntityMessage {
    optional Entity entity = 1;

    extensions 5000 to max;
}

message RemoveEntityMessage {
    optional int32 netId = 1;

    extensions 5000 to max;
}