/*
 * This is a Gradle build file:
 * - Gradle Homepage: http://gradle.org/
 * - Gradle Documentation: http://gradle.org/documentation
 * - View tasks for this project: $ gradlew tasks
 */

apply plugin: 'project-report'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'

/* Gradle Wrapper ---------------------------------------------------------- */
/* Uncomment this task and change 'gradleVersion' to create a new wrapper version.
task wrapper(type: Wrapper) {
    gradleVersion = '1.1'
}
*/

/* General: Java/Grooy ----------------------------------------------------- */
sourceCompatibility = 1.6
mainClassName = "org.terasology.game.Terasology"

// Compiles everything as groovy, due to java<->groovy interdependencies
sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs = ['src/main/java','src/main/groovy'] }
        output.resourcesDir = output.classesDir // TODO find a way to remove this
    }
    perfTest
}

jar {
    manifest {
// def manifestClasspath = configurations.runtime.collect { it.getName() }.join(',')
// def manifestClasspath = 'libs/'+configurations.runtime.collect { it.getName() }.join(' libs/') 
        attributes("Implementation-Title": project.name, "Main-Class": mainClassName)
    }
}

/* Dependencies ------------------------------------------------------------ */
repositories {
    mavenCentral()
}

configurations.compile.transitive = false;

dependencies {
    groovy group: 'org.codehaus.groovy', name: 'groovy', version: '1.8.7'
    compile group: 'com.google.guava', name: 'guava', version: '12.0.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.1'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '2.4.1'
    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.2'
    compile group: 'com.projectdarkstar.ext.jorbis', name: 'jorbis', version: '0.0.17'
    compile group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: '2.8.3'
    compile group: 'org.lwjgl.lwjgl', name: 'lwjgl_util', version: '2.8.3'
    compile group: 'io.netty', name: 'netty', version: '3.4.4.Final'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.7.RC1'
    compile group: 'java3d', name: 'vecmath', version: '1.3.1'
    compile fileTree(dir: 'libs', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.0'
    perfTestCompile sourceSets.main.output
    perfTestCompile configurations.testCompile
    perfTestCompile sourceSets.test.output
    perfTestRuntime configurations.testRuntime
}

/* Natives ----------------------------------------------------------------- */
task extractWindowsNatives(type:Copy) {
    from {
        configurations.runtime.collect { it.getName().contains('-natives-window') ? zipTree(it) : [] }
    }
    into ('natives/windows')
    exclude ('META-INF/**')
}

task extractMacOSXNatives(type:Copy) {
    from {
        configurations.runtime.collect { it.getName().contains('-natives-osx') ? zipTree(it) : [] }
    }
    into ('natives/macosx')
    exclude ('META-INF/**')
}

task extractLinuxNatives(type:Copy) {
    from {
        configurations.runtime.collect { it.getName().contains('-natives-linux') ? zipTree(it) : [] }
    }
    into ('natives/linux')
    exclude ('META-INF/**')
}

task extractNatives {
    dependsOn extractWindowsNatives
    dependsOn extractLinuxNatives
    dependsOn extractMacOSXNatives
}
ideaModule.dependsOn extractNatives
eclipseClasspath.dependsOn extractNatives
run.dependsOn extractNatives
distZip.dependsOn extractNatives
installApp.dependsOn extractNatives
